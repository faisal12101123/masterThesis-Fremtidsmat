[{"/Users/faisal/Desktop/Master-Thesis/fremtidsmat/src/index.js":"1","/Users/faisal/Desktop/Master-Thesis/fremtidsmat/src/App.js":"2","/Users/faisal/Desktop/Master-Thesis/fremtidsmat/src/Header.js":"3","/Users/faisal/Desktop/Master-Thesis/fremtidsmat/src/Calculator.js":"4","/Users/faisal/Desktop/Master-Thesis/fremtidsmat/src/RoutesPath.js":"5","/Users/faisal/Desktop/Master-Thesis/fremtidsmat/src/HeaderCalculator.js":"6","/Users/faisal/Desktop/Master-Thesis/fremtidsmat/src/LysLapskaus.js":"7"},{"size":241,"mtime":1648483883599,"results":"8","hashOfConfig":"9"},{"size":3875,"mtime":1649438016280,"results":"10","hashOfConfig":"9"},{"size":582,"mtime":1648892294333,"results":"11","hashOfConfig":"9"},{"size":3416,"mtime":1649408142171,"results":"12","hashOfConfig":"9"},{"size":449,"mtime":1648484198213,"results":"13","hashOfConfig":"9"},{"size":809,"mtime":1649408145944,"results":"14","hashOfConfig":"9"},{"size":6379,"mtime":1649408089199,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"q0kzjs",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},"/Users/faisal/Desktop/Master-Thesis/fremtidsmat/src/index.js",[],[],["41","42"],"/Users/faisal/Desktop/Master-Thesis/fremtidsmat/src/App.js",[],[],"/Users/faisal/Desktop/Master-Thesis/fremtidsmat/src/Header.js",[],[],["43","44"],"/Users/faisal/Desktop/Master-Thesis/fremtidsmat/src/Calculator.js",[],[],["45","46"],"/Users/faisal/Desktop/Master-Thesis/fremtidsmat/src/RoutesPath.js",[],[],"/Users/faisal/Desktop/Master-Thesis/fremtidsmat/src/HeaderCalculator.js",[],[],"/Users/faisal/Desktop/Master-Thesis/fremtidsmat/src/LysLapskaus.js",["47","48","49"],[],"import { useState } from \"react\";\n\nconst LysLapskaus = (props) => {\n\n    const [energi, setEnergi] = useState(false);\n    const [energiKal, setEnergiKal] = useState(false);\n    const [fett, setFett] = useState(false);\n\n    const [showResults, setShowResults] = useState(false);\n    const onClick = () => {\n        const newResult = showResults === 'false' ? 'true' : 'false';\n        if (nutrition.energi != \"\" && nutrition.energi <= 1.4) {\n            if (nutrition.energiKal != \"\" && nutrition.energiKal <= 2.4) {\n                if (nutrition.fett != \"\" && nutrition.fett <= 3.4) {\n                    props.changeDiv(newResult);\n                    setShowResults(true);\n                } else {\n                    setFett(true);\n                }\n            } else {\n                setEnergiKal(true);\n                if (nutrition.fett === \"\" || nutrition.fett > 3.4) {\n                    setFett(true);\n                }\n            }\n        } else {\n            setEnergi(true);\n            if (nutrition.energiKal === \"\" || nutrition.energiKal > 2.4) {\n                setEnergiKal(true);\n                if (nutrition.fett === \"\" || nutrition.fett > 3.4) {\n                    setFett(true);\n                }\n            } else {\n                if (nutrition.fett === \"\" || nutrition.fett > 3.4) {\n                    setFett(true);\n                }\n            }\n        }\n    };\n\n    const [nutrition, setNutrition] = useState({\n        energi: \"\",\n        energiKal: \"\",\n        fett: \"\"\n    });\n    const changeHandle = (event) => {\n        setNutrition({\n            ...nutrition,\n            [event.target.name]: [event.target.value]\n        });\n    };\n\n    return (\n        <div>\n            <h5>Porsjon (gram)  100</h5>\n\n            <div className=\"bg-light\">\n\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\" className=\"table-font\">Energi eller næringsstoff</th>\n                            <th scope=\"col\" className=\"table-font\">Mengde (gram)</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr className={energi ? \"alert-box\" : null}>\n                            <th scope=\"row\" className=\"table-font\">Energi (kj)</th>\n                            <td>\n                                <input type=\"text\" name=\"energi\" value={nutrition.energi} onChange={changeHandle} className=\"form-control\"></input>\n                            </td>\n                        </tr>\n                        <tr className={energiKal ? \"alert-box\" : null}>\n                            <th scope=\"row\" className=\"table-font\">Energi (kcal)</th>\n                            <td>\n                                <input type=\"text\" name=\"energiKal\" value={nutrition.energiKal} onChange={changeHandle} className=\"form-control\"></input>\n                            </td>\n                        </tr>\n                        <tr className={fett ? \"alert-box\" : null}>\n                            <th scope=\"row\" className=\"table-font\">Fett (g)</th>\n                            <td>\n                                <input type=\"text\" name=\"fett\" value={nutrition.fett} onChange={changeHandle} className=\"form-control\"></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\" className=\"table-font\">Mettede fettsyrer (g)</th>\n                            <td>\n                                <input type=\"text\" className=\"form-control\"></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\" className=\"table-font\">Umettet fett (g)</th>\n                            <td>\n                                <input type=\"text\" className=\"form-control\"></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\" className=\"table-font\">Flerumettede fettsyrer</th>\n                            <td>\n                                <input type=\"text\" className=\"form-control\"></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\" className=\"table-font\">Karbohydrat (g)</th>\n                            <td>\n                                <input type=\"text\" className=\"form-control\"></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\" className=\"table-font\">Sukkerarter (g)</th>\n                            <td>\n                                <input type=\"text\" className=\"form-control\"></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\" className=\"table-font\">Fiber (g)</th>\n                            <td>\n                                <input type=\"text\" className=\"form-control\"></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\" className=\"table-font\">Protein (g)</th>\n                            <td>\n                                <input type=\"text\" className=\"form-control\"></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\" className=\"table-font\">Salt (g)</th>\n                            <td>\n                                <input type=\"text\" className=\"form-control\"></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\" className=\"table-font\">Fullkorn (g)</th>\n                            <td colSpan=\"2\">\n                                <input type=\"text\" className=\"form-control\"></input>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n\n            </div>\n\n            <div className=\"col-12 button-div\">\n                <button type=\"submit\" className=\"btn btn-primary btn-lg button-search\" onClick={onClick}>Søk</button>\n            </div>\n        </div>\n\n    )\n};\n\nexport default LysLapskaus;",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"50","replacedBy":"54"},{"ruleId":"52","replacedBy":"55"},{"ruleId":"50","replacedBy":"56"},{"ruleId":"52","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":12,"column":30,"nodeType":"60","messageId":"61","endLine":12,"endColumn":32},{"ruleId":"58","severity":1,"message":"59","line":13,"column":37,"nodeType":"60","messageId":"61","endLine":13,"endColumn":39},{"ruleId":"58","severity":1,"message":"59","line":14,"column":36,"nodeType":"60","messageId":"61","endLine":14,"endColumn":38},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],["62"],["63"],["62"],["63"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]